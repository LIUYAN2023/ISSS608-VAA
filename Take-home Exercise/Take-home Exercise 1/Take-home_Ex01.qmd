---
title: "Take-home_Ex01"
author: "LIU YAN"
date: "14 May 2023"
editor: visual
---

# 1. Overview

City of Engagement, with a total population of 50,000, is a small city located at Country of Nowhere. The city serves as a service centre of an agriculture region surrounding the city. The main agriculture of the region is fruit farms and vineyards. The local council of the city is in the process of preparing the Local Plan 2023. A sample survey of 1000 representative residents had been conducted to collect data related to their household demographic and spending patterns, among other things. The city aims to use the data to assist with their major community revitalization efforts, including how to allocate a very large city renewal grant they have recently received.

This exercise aims to reveal the demographic and financial characteristics of the city of Engagement by using appropriate static and interactive statistical graphics methods. User-friendly and interactive solution will help planners to explore the complex data in an engaging way and reveal hidden patterns.

# 2. Data Preparation

## 2.1 Install R Packages and Import Dataset

The code chunk below uses pacman::p_load() to check if packages are installed. If they are, they will be launched into R. The packages installed are

[plotly](https://plotly.com/r/): Used for creating interactive web-based graphs.

[ggstatsplot](https://indrajeetpatil.github.io/ggstatsplot/): Used for creating graphics with details from statistical tests.

knitr: Used for dynamic report generation

[pacthwork](https://patchwork.data-imaginist.com/): Used to combine plots

ggdist: Used for visualising distribution and uncertainty

ggthemes: Provide additional themes for ggplot2

[tidyverse](https://www.tidyverse.org/): A collection of core packages designed for data science, used extensively for data preparation and wrangling.

All packages can be found within CRAN.

```{r}
pacman::p_load(patchwork, tidyverse, rstatix, gt,ggstatsplot, ggdist, gganimate, png, gifski, nortest,plotly )
```

```{r}

FinancialJournal <- read_csv("data/FinancialJournal.csv")
Participants <- read_csv("data/Participants.csv")

```

## 2.2 Data Introduction

For the purpose of this study, two data sets are provided. They are:

**Participants.csv**

Contains information about the residents of City of Engagement that have agreed to participate in this study.

`participantId` (integer): unique ID assigned to each participant.

`householdSize` (integer): the number of people in the participant's household

`haveKids` (boolean): whether there are children living in the participant's household.

`age` (integer): participant's age in years at the start of the study.

`educationLevel` (string factor): the participant's education level, one of: {"Low", "HighSchoolOrCollege", "Bachelors", "Graduate"}

`interestGroup` (char): a char representing the participant's stated primary interest group, one of {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J"}. Note: specific topics of interest have been redacted to avoid bias.

`joviality` (float): a value ranging from \[0,1\] indicating the participant's overall happiness level at the start of the study.

**FinancialJournal.csv**

Contains information about financial transactions.

`participantId` (integer): unique ID corresponding to the participant affected

`timestamp` (datetime): the time when the check-in was logged

`category` (string factor): a string describing the expense category, one of {"Education", "Food", "Recreation", "RentAdjustment", "Shelter", "Wage"}

`amount` (double): the amount of the transaction

## 2.3 Data Cleaning and Wrangling

### 2.3.1 Data Issue and Modification

| Item | Issue                                                                              | Solution                                                                                          |
|:----------------:|:------------------------|:----------------------------|
|  1   | wrong data type                                                                    | check & modify all the variable's data type as per the data type indicated in dataset description |
|  2   | "RentAdjustment" is the refundable portion of rent, which belongs to the "shelter" | replace all the "RentAdjustment" with "shelter"                                                   |
|  3   | "timestamp" format is too complicated and not useable.                             | Consider all the record belong to same year, so change "timestamp" to "month"                     |
|  4   | there are 1,113 rows data are duplicates                                           | remove all duplicate rows in the FinancialJournal data table                                      |
|  5   | 131 nos of participantId only have less than 12 months record                      | remove the rows with less than 12 months record                                                   |

```{r}

# 1.Modify the data type###########################################################

# Convert participantId from numeric to integer
FinancialJournal$participantId <- as.integer(FinancialJournal$participantId)

# Convert category from character to string factor with specified levels
FinancialJournal$category <- factor(FinancialJournal$category, levels = c("Education", "Food", "Recreation", "RentAdjustment", "Shelter", "Wage"))

# Convert amount from numeric to double
FinancialJournal$amount <- as.double(FinancialJournal$amount)

# Convert participantId from numeric to integer
Participants$participantId <- as.integer(Participants$participantId)

# Convert householdSize from numeric to integer
Participants$householdSize <- as.integer(Participants$householdSize)

# Convert haveKids from logical to Boolean
Participants$haveKids <- as.logical(Participants$haveKids)

# Convert age from numeric to integer
Participants$age <- as.integer(Participants$age)

# Convert educationLevel from character to string factor with specified levels
Participants$educationLevel <- factor(Participants$educationLevel, levels = c("Low", "HighSchoolOrCollege", "Bachelors", "Graduate"))

# Convert joviality from numeric to float
Participants$joviality <- as.double(Participants$joviality)


# 2. Replace all the "RentAdjustment" with "shelter"###############################

FinancialJournal$category <- factor(ifelse(FinancialJournal$category == "RentAdjustment", "Shelter", as.character(FinancialJournal$category)))

# 3. Extract new variable month from the timestamp#################################

FinancialJournal <- FinancialJournal %>%
  mutate(month = month(FinancialJournal$timestamp))


# 4. Remove all duplicate rows in the FinancialJournal#############################

# Check duplicate rows in the FinancialJournal data table
sum(duplicated(FinancialJournal))

# Remove all duplicate rows in the FinancialJournal
FinancialJournal <- distinct(FinancialJournal)


# 5. remove the rows with less than 12 months record###############################

# check the row with less than 12 months record
FinancialJournal %>% 
  group_by(participantId) %>% 
  filter(n_distinct(month) < 12) %>% 
  distinct(participantId)

# remove the rows with less than 12 months record
FinancialJournal %>%
  group_by(participantId) %>%
  mutate(month_count = n_distinct(month)) %>%
  filter(month_count >= 12) %>%
  select(-month_count) -> FinancialJournal
```

### 2.3.2 Reshape FinancialJournal and Data Table Join

To conduct a comprehensive analysis of participant demographics and their financial status, we implemented following steps:

-   Perform a grouping operation on the "FinancialJournal" using the "participantId" and "category" variables, to obtain each participant's monthly expenditure across different categories.

-   Reshape the new table to "Financial_wide". Each row of "Financial_wide" contains one participant's financial expenditures and income information.

-   Merge the "Financial_wide" and "Participants" tables by the "participantId" variable, creating a new table "joined_table" that contains comprehensive information on participant demographic, expenditures, and income.

```{r}
# Group the rows of the "FinancialJournal" data table by "participantId" and "category"
Financial_sum <- FinancialJournal %>%
  group_by(participantId, category) %>%
  summarise(average_amount = sum(amount)/12) 


# Reshape the Financial_sum and make each "category" becomes a separate column 
Financial_wide <- Financial_sum %>%
  spread(category, average_amount)


# Join the two Participants and Financial_wide by participantId

joined_table <- Participants %>% 
                inner_join(Financial_wide, by = "participantId")

```

### 2.3.3 New Variable Wrangling

To better utilize the available variables, we create several new variables as part of our data analysis process.

`Total_Expenditure`: aggregating all monthly expenditures on education, food, recreation, and shelter. This variable provides insight into the overall cost of living for each participant.

`Saving_Ratio`: the difference between wage and total_expenditure divided by wage. This variable is a useful indicator of financial health and reflects the proportion of income that is being saved or invested for future needs.

`age_bin`: binning the "age" variable into discrete categories based on the following age ranges: "\<=30", "\>30 - 40", "\>40 - 50", and "\>50". This variable serves as a categorical variable and enables us to analyze the characteristics of different age groups.

`Wage_bin`: binning the "wage" variable into income categories based on the following ranges: "\<3000", "3000 - \<4000", "4000 - \<5000", and "\>=5000". This variable serves as a categorical variable and facilitates the analysis of different income groups.

```{r}

# Create new columns "Total_Expenditure" and "Saving_Ratio"
joined_table <- joined_table %>%
  mutate(across(c(Education, Food, Recreation, Shelter), ~replace_na(., 0)),
        Total_Expenditure = (Education + Food + Recreation + Shelter),
        Saving_Ratio =( (Wage + Total_Expenditure)/Wage))
        
# Create age_bin column
joined_table$age_bin <- cut(joined_table$age, 
                            breaks = c(-Inf, 30, 40, 50, Inf),
                            labels = c("<=30", ">30-40", ">40-50", ">50"))

# Create Wage_bin column
joined_table$Wage_bin <- cut(joined_table$Wage,
                             breaks = c(-Inf, 3000, 4000, 5000, Inf),
                             labels = c("<3000", "3000-<4000", "4000-<5000", ">=5000"))


```

# 3. Data Visualisation

## 3.1 Analysis on Financial Situation

In this section, we will focus on participant's financial situation to analyse which factor has association with people's income, and the difference in saving ration and total_expenditure under different group.

### 3.1.1 Association Between Wage and Education/Age/Interset

Significant test of association (dependence) is an essential statistical technique used to determine whether two variables are related or associated with each other. One of the useful tools for performing this test in R is the [ggbarstats()](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbarstats.html).

::: panel-tabset
## Wage_bin vs EducationLevel

```{r}
ggbarstats(joined_table, 
           x = Wage_bin, 
           y = educationLevel)
```

## Wage_bin vs Age_bin

```{r}
ggbarstats(joined_table, 
           x = age_bin, 
           y = haveKids)



```

## Wage_bin vs HaveKids

```{r}
ggbarstats(joined_table, 
           x = Wage_bin, 
           y = haveKids)
```
:::

**Significant Test of Association between** **Wage_bin vs educationLevel:**

The result of this test suggests that there is a significant association between the variables "Wage_bin" and "educationLevel" in the dataset, as indicated by the low p-value (p=2.82e-69) and the high value of the `X2pearson` statistic (X2pearson(9)=346.91).

The `V ̂cramer`statistic also indicates a moderate degree of association (V ̂ cramer =0.36). The `CI95%`\[0.32,1.00\] suggests that there is a 95% chance that the true value of the association between these variables falls within this interval, with a lower bound of 0.32 and an upper bound of 1.00.

Finally, the Nobs value of 880 indicates that there were 880 observations used in the analysis.

**Insight:**

1\. There is a significant association between "Wage_bin" and "educationLevel" in the dataset.

\- Nearly half of the survey participants belong to the high school or college student, or low education group, who report a relatively lower average monthly income.

\- Graduates have the highest representation in the high income group, followed by those with a bachelor's degree.

2\. There is no association between the variables "Wage_bin" and " Age_bin", with P value = 0.44.

3\. There is a significant association between the variables "Wage_bin" and " haveKids" in the dataset, people tend to have kids when they have a relatively higher income.

### 3.1.2 Boxplot of Saving Ratio

A boxplot, also known as a box and whisker plot, is a graphical representation used to display the spread and central tendency of a dataset. It provides measures of spread such as the interquartile range and mean, as well as measures of center such as the median and mean.

```{r}
library(plotly)

plot_ly(data = joined_table,
        x = ~educationLevel,
        y = ~Saving_Ratio,
        line = list(width =1),
        type = "box",
        colors = "YlGnBu",
        showlegend = FALSE,
        boxmean = TRUE
        ) %>%
 
  # New line of code after pipe operator
  layout(title = "Boxplot of Saving Ratio by Selected Factors ",
         xaxis = list(title = ""),
         yaxis = list(title = "Saving Ratio"),
         
         updatemenus = list(list(type = 'dropdown',
                         xref = "paper",
                         yref = "paper",
                         xanchor = "left",
                         x = 0.01, 
                         y = 0.99,
                         buttons = list(
                           list(method = "update",
                                args = list(list(x = list(joined_table$educationLevel)),
                                            list(xaxis = list(categoryorder = "category ascending"))),
                                label = "educationLevel"),
                           list(method = "update",
                                args = list(list(x = list(joined_table$haveKids)),
                                            list(xaxis = list(categoryorder = "category ascending"))),
                                label = "haveKids"),
                          list(method = "update",
                                args = list(list(x = list(joined_table$householdSize)),
                                            list(xaxis = list(categoryorder = "category ascending"))),
                                label = "householdSize")
                           
                         )
                    )
         )

)

```

**Saving Ratio vs Education Level:** it can be observed that graduates have the highest mean saving ratio, while those with low education level have the lowest mean saving ratio. Moreover, it is worth noting that there is a higher presence of outliers for the group of graduates.

**Saving Ratio vs Have Kids:** the box plot indicates that both groups, i.e., those with and without kids, have similar mean and median saving ratios. However, the dispersion, as measured by the interquartile range, is smaller for the group of individuals who have kids.

**Saving Ratio vs Household Size:** the box plot reveals that the median saving ratio for households with two people is lower compared to those household size with one or three people. Additionally, the group with one person in the household has the largest dispersion of saving ratios.

### 3.1.3 Boxplot of Total_Expenditure

```{r}

library(plotly)

plot_ly(data = joined_table,
        x = ~educationLevel,
        y = ~Total_Expenditure,
        line = list(width =1),
        type = "box",
        colors = "YlGnBu",
        showlegend = FALSE,
        boxmean = TRUE
        ) %>%
 
  # New line of code after pipe operator
  layout(title = "Boxplot of Total_Expenditure by selected factors ",
         xaxis = list(title = ""),
         yaxis = list(title = "Total_Expenditure"),
         
         updatemenus = list(list(type = 'dropdown',
                         xref = "paper",
                         yref = "paper",
                         xanchor = "left",
                         x = 0.01, 
                         y = 0.99,
                         buttons = list(
                           list(method = "update",
                                args = list(list(x = list(joined_table$educationLevel)),
                                            list(xaxis = list(categoryorder = "category ascending"))),
                                label = "educationLevel"),
                           list(method = "update",
                                args = list(list(x = list(joined_table$haveKids)),
                                            list(xaxis = list(categoryorder = "category ascending"))),
                                label = "haveKids"),
                          list(method = "update",
                                args = list(list(x = list(joined_table$householdSize)),
                                            list(xaxis = list(categoryorder = "category ascending"))),
                                label = "householdSize")
                              
                           
                         )
                    )
         )

)



```

**Total Expenditure vs Education Level:** the mean monthly living cost does not vary significantly among different education levels. Besides, the dispersion of the monthly living cost is smaller for individuals with a lower level of education and for those with a high school or college degree, compared to those with a bachelor's or graduate degree.

**Total Expenditure vs Have Kids :** In comparing the mean monthly living costs of demographic groups with and without children, it was found that households with children experience a higher mean average monthly cost of living compared to those without.

**Total Expenditure vs household size :** it can be observed that as the household size increases, the total living cost also increases.

## 3.2 Analysis on Joviality

Maintaining a jovial attitude can be a contributing factor to a more harmonious social environment and can improve overall well-being. In this section, we will conduct an analysis of the factors that affect citizens' joviality and explore the differences in joviality levels across various demographic groups.

### 3.2.1 Significant Test of Correlation Between Joviality and Saving_Ratio/Total_Expenditure/Wage_bin/Recreation

```{r}
p1 <- ggscatterstats(
data = joined_table,
x = Saving_Ratio,
y = joviality,
marginal = FALSE,
) +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Joviality and Saving_Ratio")

p2 <- ggscatterstats(
data = joined_table,
x = Wage,
y = joviality,
marginal = FALSE,
) +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Joviality and Wage")

p1 + p2

```

```{r}
joined_table$Recreation_cost <- abs(joined_table$Recreation)
p3 <- ggscatterstats(
data = joined_table,
x = Recreation_cost,
y = joviality,
marginal = FALSE,
) +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Joviality and Recreation_cost")

joined_table$Food_cost <- abs(joined_table$Food)
p4 <- ggscatterstats(
data = joined_table,
x = Food_cost,
y = joviality,
marginal = FALSE,
) +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Joviality and Food_cost")

p3+p4
```

These results suggest that there are significant correlations between joviality and the variables of Saving_Ratio, Recreation, and Food, but a weaker correlation with Wage.

-   The p-values for all four tests are very small, indicating a low likelihood of obtaining such strong correlations by chance.

-   The signs of the correlation coefficients suggest that as Recreation, and Food increase, Joviality tends to increase as well, whereas for saving ratio and Wage, Joviality tends to decrease as these two variables increases.

-   The correlation coefficient rPreason measures the strength and direction of the linear relationship between the variables. In this case, a value of -0.56, -0.3, 0.55, and 0.57 respectively suggests a moderate to strong negative correlation for Saving_Ratio and Wage, and moderate to strong positive correlation for Recreation and Food.

### 3.2.2 Oneway ANOVA Test of Joviality

### Normality Assumption

Before performing the necessary hypothesis testing, we need to choose between parametric and non-parametric test. perform Anderson-Darling test with confidence level of 95% to test the null hypothesis that the joviality by different factor(education_level,age,have kids, interestGroup) is normally distributed.

::: panel-tabset
## Normality Test Joviality by EducationLevel

```{r}
library(gridExtra)
library(ggpubr)

# 创建数据框
df <- data.frame(
  group = joined_table$educationLevel,
  joviality = joined_table$joviality
)

# 创建ggplot对象
qq_plot <- ggplot(df, aes(sample = joviality)) +
  stat_qq() + 
  stat_qq_line() +
  facet_wrap(~group)

# 创建格子框
table_gts <- lapply(unique(df$group), function(x) {
  sw_t <- df %>%
    filter(group == x) %>%
    shapiro_test(joviality) %>%
    gt()
  tmp <- tempfile(fileext = '.png')
  gtsave(sw_t, tmp)
  png::readPNG(tmp, native = TRUE)
})


# 组合四个图形
ggarrange(qq_plot, ncol = 1, nrow = 1)

```

## Normality Test Joviality by Age_bin

```{r}
library(gridExtra)
library(ggpubr)

# 创建数据框
df <- data.frame(
  group = joined_table$age_bin,
  joviality = joined_table$joviality
)

# 创建ggplot对象
qq_plot <- ggplot(df, aes(sample = joviality)) +
  stat_qq() + 
  stat_qq_line() +
  facet_wrap(~group)

# 创建格子框
table_gts <- lapply(unique(df$group), function(x) {
  sw_t <- df %>%
    filter(group == x) %>%
    shapiro_test(joviality) %>%
    gt()
  tmp <- tempfile(fileext = '.png')
  gtsave(sw_t, tmp)
  png::readPNG(tmp, native = TRUE)
})


# 组合四个图形
ggarrange(qq_plot, ncol = 1, nrow = 1)

```

## Normality Test Joviality by HaveKids

```{r}
library(gridExtra)
library(ggpubr)

# 创建数据框
df <- data.frame(
  group = joined_table$haveKids,
  joviality = joined_table$joviality
)

# 创建ggplot对象
qq_plot <- ggplot(df, aes(sample = joviality)) +
  stat_qq() + 
  stat_qq_line() +
  facet_wrap(~group)

# 创建格子框
table_gts <- lapply(unique(df$group), function(x) {
  sw_t <- df %>%
    filter(group == x) %>%
    shapiro_test(joviality) %>%
    gt()
  tmp <- tempfile(fileext = '.png')
  gtsave(sw_t, tmp)
  png::readPNG(tmp, native = TRUE)
})


# 组合四个图形
ggarrange(qq_plot, ncol = 1, nrow = 1)

```
:::

Based on the result above, the null hypothesis is rejected as some of the distributions are below 0.05 critical value. As such, we are not able to confirm normality assumption for distribution of joviality by education_level/age/have kids/ interestGroup).




\`\`\`

-   There was a significant association between joviality and education level, as indicated by a X2Kruskal-Wallis test statistic of 13.50 with a p-value of 3.67e-03.

-   The effect size (e\^2 ordinal) was 0.02, suggesting that education level accounted for a small but meaningful proportion of the variation in joviality scores.

-   The 95% confidence interval for the effect size ranged from 6.53e-03 to 1.00, indicating a relatively wide range of possible effect sizes.

-   There were no significant associations found between joviality and age and having kids:

    -For age, the X2Kruskal-Wallis test statistic was 5.72 with a p-value of 0.13, and the effect size (e\^2 ordinal) was 6.51e-03 with a 95% confidence interval ranging from 1.51e-03 to 1.00.

    -For having kids, the X2Mann-Whitney test statistic was 81868 with a p-value of 0.28, and the effect size (r_ordinal\^rank) was 0.05 with a 95% confidence interval ranging from -0.04 to 0.13.
