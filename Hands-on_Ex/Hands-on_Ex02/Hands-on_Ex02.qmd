---
title: "Hands-on Exercise 2"
author: "LIU YAN"
date: "22 April 2023"
editor: visual
---

# 1. Getting Started

## Install and launching R Packages

The code chunk below uses p_load() of pacman package to check if packages are installed in the computer. If they are, then they will be launched into R. The R packages installed are:

-   [ggrepel](https://ggrepel.slowkow.com/):an R package provides geoms for ggplot2 to repel overlapping text labels.

-   [patchwork](https://patchwork.data-imaginist.com/): an R package for preparing composite figure created using ggplot2.

-   [ggthemes](https://ggplot2.tidyverse.org/reference/ggtheme.html):an R package provides some extra themes, geoms, and scales for 'ggplot2'.

-   [hrbrthemes](https://cinc.rud.is/web/packages/hrbrthemes/):an R package provides typography-centric themes and theme components for ggplot2.

-   [tidyverse](https://www.tidyverse.org/): an opinionated collection of R packages designed for data science.

```{r}
pacman::p_load(ggrepel, patchwork, 
               ggthemes, hrbrthemes,
               tidyverse) 
```

## Importing the Data

```{r}
exam_data<-read_csv("data/Exam_data.csv")
```

# 2. Exercise

## 2.1.1 Beyond ggplot2 Annotation: ggrepel

```{r}
ggplot(data=exam_data, aes(ENGLISH,MATHS)) +
  geom_point() +geom_smooth(method=lm,size=0.5)+geom_label(aes(label=ID),hjust=.5,vjust=-.5)+coord_cartesian(xlim=c(0,100),ylim = c(0,100))+ggtitle("English scores versus Maths scores for Primary 3")
```

## 2.1.2 Working with ggrepel

ggrepel is an extension of **ggplot2** package which provides geoms for **ggplot2** to repel overlapping text. We simply replace geom_text() by [geom_text_repel()](https://ggrepel.slowkow.com/reference/geom_text_repel.html) and geom_label()by [geom_label_repel](https://ggrepel.slowkow.com/reference/geom_text_repel.html).

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

## 2.2.1 Beyond ggplot2 Themes

ggplot2 comes with eight [built-in themes](https://ggplot2.tidyverse.org/reference/ggtheme.html), they are: theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins = 20,boundary=100,color="grey25",fill="grey90") +
  theme_gray()+
  ggtitle("Distribution of Maths scores")
```

## 2.2.2 Working with ggtheme Package

[ggthemes](https://cran.r-project.org/web/packages/ggthemes/) provides ['ggplot2' themes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/) that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, 'Stata', 'Excel', and The Wall Street Journal, among others.

In the example below, The [Economist](https://www.economist.com/graphic-detail) theme is used.

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins = 20,boundary=100,color="grey25",fill="grey90") +
  theme_economist()+
  ggtitle("Distribution of Maths scores")
```

## 2.2.3 Working with hrbthems Package

[hrbrthemes](https://cinc.rud.is/web/packages/hrbrthemes/) package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins = 20,boundary=100,color="grey25",fill="grey90") +
  ggtitle("Distribution of Maths scores")+
  theme_ipsum()
```

The second goal centers around productivity for a production workflow. In fact, this "production workflow" is the context for where the elements of hrbrthemes should be used.

```{r, warning=FALSE, message=FALSE}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins = 20,boundary=100,color="grey25",fill="grey90") +
  ggtitle("Distribution of Maths scores")+
  theme_ipsum(axis_title_size = 18,base_size = 15,grid="Y")
```

`axis_title_size`' argument is used to increase the font size of the axis title to 18.

`base_size` argument is used to increase the default axis label to 15.

`grid argument` argument is used to remove the x-axis grid lines.

## 2.3.1 Beyond Single Graph

It is not unusual that multiple graphs are required to tell a compelling visual story. There are several ggplot2 extensions provide functions to compose figure with multiple graphs. This section will introduce how to create composite plot by combining multiple graphs.

First, let us create three statistical graphics by using the code chunk below.

```{r}
p1<-ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins = 20,boundary=100,color="grey25",fill="grey90") +
  coord_cartesian(xlim=c(0,100))+
  ggtitle("Distribution of Maths scores")
```

```{r}
p2<-ggplot(data=exam_data, 
       aes(x= ENGLISH)) +
  geom_histogram(bins = 20,boundary=100,color="grey25",fill="grey90") +
  coord_cartesian(xlim=c(0,100))+
  ggtitle("Distribution of English scores")
```

```{r}

p3 <- ggplot(data=exam_data, 
             aes(x= MATHS, 
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

## 2.3.2 Creating Composite Graphics: pathwork methods

This section will share an ggplot2 extension called patchwork which is specially designed for combining separate ggplot2 graphs into a single figure.

[Patchwork](https://patchwork.data-imaginist.com/) package has a very simple syntax where we can create layouts super easily. Here's the general syntax that combines:

-   Two-Column Layout using the Plus Sign +.

-   Parenthesis () to create a subplot group.

-   Two-Row Layout using the Division Sign /

## 2.3.3 Combining two ggplot2 graphs

Figure in the tabset below shows a composite of two histograms created using patchwork.

```{r}

p1 + p2
```

## 2.3.4 Combining Three ggplot2 Graphs

We can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:

-   "\|" operator to stack two ggplot2 graphs

-   "/" operator to place the plots beside each other

-   "()" operator the define the sequence of the plotting

```{r}
(p1 / p2) | p3
```

To learn more about, refer to [Plot Assembly](https://patchwork.data-imaginist.com/articles/guides/assembly.html).

## 2.3.5 Creating a Composite Figure with Tag

In order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown in the figure below.

```{r}
((p1 / p2) | p3) + 
  plot_annotation(tag_levels = 'I')
```

## 2.3.6 Creating Figure with Insert

Beside providing functions to place plots next to each other based on the provided layout. With [inset_element()](https://patchwork.data-imaginist.com/reference/inset_element.html) of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.

```{r}

p3+inset_element(p2,left=0.02,bottom=0.7,right=0.5,top=1)
```

## 2.3.7 Creating a Composite Figure by Using patchwork and ggtheme

Figure below is created by combining patchwork and theme_economist() of ggthemes package discussed earlier.

```{r}

patchwork<-(p1/p2)|p3
patchwork&theme_economist()
```
